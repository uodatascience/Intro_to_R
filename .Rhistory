scale_color_brewer(palette="Set1", name="Consonant", labels=c("/g/","/b/"))+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
geom_smooth(method="lm", se=FALSE)+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16))
g.locus
g.locus <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=consonant))+
geom_point()+
scale_color_brewer(palette="Set1", name="Consonant", labels=c("/g/","/b/"))+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
geom_smooth(method="lm", se=FALSE)+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legent.text = element_text(size=12))
g.locus
g.locus <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=consonant))+
geom_point()+
scale_color_brewer(palette="Set1", name="Consonant", labels=c("/g/","/b/"))+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
geom_smooth(method="lm", se=FALSE)+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=12))
g.locus
g.locus <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=consonant))+
geom_point()+
scale_color_brewer(palette="Set1", name="Consonant", labels=c("/g/","/b/"))+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
geom_smooth(method="lm", se=FALSE)+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/vowel_mds.pdf", g.locus,
device="pdf", width=12, height=12, units="in", dpi=300)
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/locus.pdf", g.locus,
device="pdf", width=12, height=12, units="in", dpi=300)
g.mds_s <- ggplot(mds_df, aes(x=x, y=y, color=speaker))+
geom_point()+
scale_color_brewer(palette="Set1", name="Speaker")+
facet_grid(.~consonant)+
theme(panel.grid = element_blank(),
panel.background = element_rect(fill="#444444"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
strip.text = element_text(size="18"),
legend.direction = "horizontal",
legend.position=c(0.5,0.9),
legend.key = element_rect(fill="#444444"),
legend.text = element_text(size="12"),
legend.title = element_text(size="12"))
g.mds_s
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/speaker_mds.pdf", g.mds_s,
device="pdf", width=12, height=6, units="in", dpi=300)
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/locus.pdf", g.locus,
device="pdf", width=8, height=8, units="in", dpi=300)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
geom_smooth(method="lm", se=FALSE)+
scale_color_brewer(palette="Paired")+
labs(colour="cons, vow")+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(colour="cons, vow")+
theme(legend.position=c(.15,.85),
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(legend.position="none",
panel.background=element_rect(fill="transparent"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(legend.position="none",
panel.background=element_rect(fill="#444444"),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(legend.position="none",
panel.background=element_rect(fill="#444444"),
panel.grid = element_blank(),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
geom_smooth(method="lm", se=FALSE)+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(legend.position="none",
panel.background=element_rect(fill="#444444"),
panel.grid = element_blank(),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/locus_vowels.pdf", g.locus_vowels,
device="pdf", width=8, height=8, units="in", dpi=300)
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(legend.position="none",
panel.background=element_rect(fill="#444444"),
panel.grid = element_blank(),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/locus_vowels.pdf", g.locus_vowels,
device="pdf", width=8, height=8, units="in", dpi=300)
g.locus_speakers <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, speaker)))+
geom_point()+
geom_smooth(method="lm", se=FALSE)+
scale_color_brewer(palette="Paired")+
labs(colour="cons, spk")
g.locus_speakers
g.locus_speakers <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, speaker)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(colour="cons, spk")
g.locus_speakers
g.locus_acc <- ggplot(gendat_token, aes(x=f2_vowel, y=f2_onset, color=consonant))+
geom_point(aes(size=cxnorm))+
geom_smooth(method="lm")
g.locus_acc
?predict
?predict.lda
z <- predict(lda_all)
z
plot(z$x)
z$class
z$x
require(MASS)
iris.lda<-lda(Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data =    iris)
datPred<-data.frame(Species=predict(iris.lda)$class,predict(iris.lda)$x) #create data.frame
head(datPred)
klar:::partimat
klaR:::partimat
klaR:::partimat.data.frame()
klaR:::partimat.data.frame
klaR:::partimat.matrix
klaR:::partimat.default
z <- klaR::partimat(consonant ~ f2_onset + f2_vowel, data=f2_c2, method="lda")
z
z
ggplot(gendat_token, aes(x=interaction(token,speaker,vowel,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_all_p-0.5),stat="identity",color="red",fill="transparent")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="blue",fill="transparent")+
geom_bar(aes(y=lda_c2_p-0.5), stat="identity",color="green",fill="transparent")+
facet_grid(cohort~.)
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")
g.lda_1
lda_bar_theme <- theme(panel.background = element_blank(),
panel.grid = element_blenk())
lda_bar_theme <- theme(panel.background = element_blank(),
panel.grid = element_blank())
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
lda_bar_theme
g.lda_1
lda_bar_theme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.text.x=element_blank(),
axis.label.x = element_blank()
)
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
lda_bar_theme
g.lda_1
lda_bar_theme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank()
)
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
lda_bar_theme
g.lda_1
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")
lda_bar_theme
g.lda_1
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")+
lda_bar_theme
g.lda_1
lda_bar_theme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank()
)
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")+
lda_bar_theme
g.lda_1
g.lda_2 <- ggplot(gendat_token[gendat_token$cohort == 2,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c2_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")+
lda_bar_theme
g.lda_2
g.lda_1 <- ggplot(gendat_token[gendat_token$cohort == 0,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c1_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")+
lda_bar_theme
g.lda_1
g.lda_2 <- ggplot(gendat_token[gendat_token$cohort == 1,], aes(x=interaction(token,vowel,speaker,consonant),y=meanrs-0.5))+
geom_bar(stat="identity")+
geom_bar(aes(y=lda_c2_p-0.5), stat="identity",color="red",fill="transparent")+
labs(y = "Proportion response (/b/-/g/)")+
lda_bar_theme
g.lda_2
library(grid)
grid.arrange(g.lda_1,g.lda_2)
??grid.arrange
library(grid)
?grid
install.packages("cowplot")
cowplot::plot_grid(g.lda_1, g.lda_2)
?cowplot::plot_grid
cowplot::plot_grid(g.lda_1, g.lda_2, align="v")
cowplot::plot_grid(g.lda_1, g.lda_2, align="h")
cowplot::plot_grid(g.lda_1, g.lda_2, align="h", nrow=2)
cowplot::plot_grid(g.lda_1, g.lda_2, align="h", nrow=2, labels=c("Cohort 1", "Cohort 2"))
lda_grid <- cowplot::plot_grid(g.lda_1, g.lda_2, align="h", nrow=2)
?cowplot::save_plot
cowplot::save_plot("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/lda.pdf", lda_grid,
device="pdf", width=8, height=8, units="in", dpi=300)
cowplot::save_plot("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/lda.pdf", lda_grid,
device="pdf", base_width=8, base_height=8, units="in", dpi=300)
cowplot::save_plot("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/lda.pdf", lda_grid,
device="pdf", base_width=8, base_height=6, units="in", dpi=300)
ggplot(gendat_token, aes(x=interaction(token,speaker,vowel,consonant)))+
geom_point(aes(y=lda_all_p-0.5))+
geom_point(aes(y=lda_c1_p-0.5),color="green")+
geom_point(aes(y=lda_c2_p-0.5),color="blue")
g.all_p <- ggplot(gendat_token, aes(y=meanrs-0.5, x=lda_all_p-0.5, color=cohort))+
geom_point()+
geom_smooth(method="lm")
g.all_p
g.all_p <- ggplot(gendat_token, aes(y=meanrs-0.5, x=lda_all_p-0.5, color=cohort))+
scale_color_brewer(palette="Set1")+
geom_point()+
geom_smooth(method="lm")
g.all_p
g.all_p <- ggplot(gendat_token, aes(y=meanrs-0.5, x=lda_all_p-0.5, color=cohort))+
scale_color_brewer(palette="Set1")+
geom_point()+
geom_smooth(method="lm", se=FALSE)
g.all_p
g.mds_v <- ggplot(mds_df, aes(x=x, y=y, color=vowel))+
geom_point()+
scale_color_brewer(palette="Set1", name="Vowel")+
facet_grid(.~consonant)+
theme(panel.grid = element_blank(),
panel.background = element_rect(fill="#444444"),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
strip.text = element_text(size="18"),
legend.direction = "horizontal",
legend.position=c(0.5,0.9),
legend.key = element_rect(fill="#444444"),
legend.text = element_text(size="12"),
legend.title = element_text(size="12"))
g.mds_v
ggsave("/Users/jonny/Dropbox/Lab Self/inFormants/Analysis/Supplemental Plots/vowel_mds.pdf", g.mds_v,
device="pdf", width=12, height=6, units="in", dpi=300)
g.locus_vowels <- ggplot(f2, aes(x=f2_vowel, y=f2_onset, color=interaction(consonant, vowel)))+
geom_point()+
scale_color_brewer(palette="Paired")+
labs(x="F2 Vowel (Hz)", y="F2 Onset (Hz)")+
labs(colour="cons, vow")+
theme(
panel.background=element_rect(fill="#444444"),
panel.grid = element_blank(),
legend.title=element_text(size=16),
axis.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element_text(size=14)
)
g.locus_vowels
?weighted.mean
which.min
?which.min
?quantile
?rank
?aggregate
aggregate
diamonds
library(ggplot2)
diamonds
library(psych)
describe(diamonds)
?describe
df <- ggplot2::diamonds
psych::describe(df)
setwd("/Users/jonny/GitHub/R_Guide")
bookdown::render_book("index.Rmd")
summary(df)
psych::describe(df)
?knitr::kable
?pander
??pander
bookdown::render_book("index.Rmd")
??pander::pander
head(df)
df[,sum(price)]
df[,sum('price')]
?data.table
??data.table
?rowSums
colMeans(df)
colMeans(df[,5:9])
apply(x, 1, mean)
apply(df, 1, mean)
apply(df, c(1,2), mean)
apply(df, 2, mean)
apply(df[,5:9], 2, mean)
apply(df[,5:9], 2, c(mean, sd))
apply(df, 2, mean)
head(df)
?plyr::summarize
?plyr::ddply
df_summary <- plyr::ddply(df, .(cut, carat), plyr::summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
df_summary <- ddply(df, .(cut, carat), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
library(plyr)
df_summary <- ddply(df, .(cut, carat), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
df_summary
df_summary <- ddply(df, .(cut, ntile(carat, 5)), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
df_summary <- ddply(df, .(cut, dplyr::ntile(carat, 5)), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
df_summary
dplyr::ntile(df$carat)
dplyr::ntile(df$carat, 5)
?dplyr::ntile
head9df
head(df)
?anova
z <- lm(price~clarity, data=df)
z
summary(z)
t <- summary(z)
t$fstatistic
t$adj.r.squared
z <- lm(price~depth, data=df)
t <- summary(z)
t
z$qr
z$coefficients
z$residuals
z$effects
z$fitted.values
z$model
df_summary_rsq <- ddply(df, .(cut), summarise,
r_sq <- summary(lm(price~carat))$adj.r.squared)
df_summary_rsq
head(df_summary_bin)
df_summary_bin <- ddply(df, .(cut, dplyr::ntile(carat, 5)), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
head(df_summary_bin)
df_summary_rsq <- ddply(df, .(cut), summarise,
rsquared <- summary(lm(price~carat))$adj.r.squared)
df_summary_rsq
df_mutate <- ddply(df, .(cut), mutate,
timesten <- price*10)
df_mutate
df_mutate <- ddply(df, .(cut), mutate,
timesten = price*10)
df_mutate
df_mutate_seq <- ddply(df, .(cut), mutate,
n = seq(1, length(price)))
head(df_mutate_seq)
df_mutate <- ddply(df, .(cut), mutate,
timesten = price*10,
n = seq(1, length(price)))
pander::pander(
head(df_mutate)
)
bookdown::render_book(".index.Rmd")
bookdown::render_book(".index.Rmd")
df_summary_bin <- ddply(df, .(cut, dplyr::ntile(carat, 5)), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price),
.parallel = TRUE)
install.packages("foreach")
df <- ggplot2::diamonds
psych::describe(df)
head(df)
apply(df[,5:9], 2, mean)
apply(df, 2, mean)
levels(df$cut)
df[df$cut == levels(df$cut)[1],]
df[df$cut == levels(df$cut)[2],]
df[(df$cut == levels(df$cut)[1]) & (df$carat == unique(df$carat)[1]),]
df_summary <- ddply(df, .(cut, carat), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
pander::pander(
df_summary
)
head(df_summary)
df_summary_bin <- ddply(df, .(cut, dplyr::ntile(carat, 5)), summarise,
mean_price = mean(price),
sd_price = sd(price),
n_samples = length(price))
pander::pander(
df_summary_bin
)
a <- lm(price~carat, data=df)
summary(a)
df_summary_rsq <- ddply(df, .(cut), summarise,
rsquared <- summary(lm(price~carat))$adj.r.squared)
pander::pander(
df_summary_rsq
)
df_mutate <- ddply(df, .(cut), mutate,
timesten = price*10,
n = seq(1, length(price)))
pander::pander(
head(df_mutate)
)
plot(df)
plot(df$price)
