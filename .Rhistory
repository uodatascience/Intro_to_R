file <- file.path(laser_folder, f)
out <- R.matlab::readMat(file)
out <- out$out
str(out)
names(out)
field_names <- names(out[,,1])
field_names
attributes(diamonds)
las_off <- which(field_names == "M1OFF")
off <- drop(out[las_off,1,1][[1]]) # Get the M1OFF field, dropping singleton dimensions
off
off <- plyr::adply(off, c(1,2)) # adply usually applies a function, but here we just want it to group values by the first two dimensions of the array (amplitude and trial) and concatenate
off
off <- melt(off, id.vars=c("X1","X2"), na.rm=TRUE) # Now we want to melt this back down so the columns with multiple spike times are flattened to a single column
off
off <- off[,c(1,2,4)] # Subset the dataframe, leaving behind the spike # column
names(off) <- c("amplitude", "rep", "spiketime") # rename fields
off <- off[order(off$amplitude, off$rep),] # reorder by amp then rep
off$amplitude <- as.integer(off$amplitude) # changing types and adding other variables
off$rep <- as.integer(off$rep)
off$channel <- as.integer(substr(f,11,11))
off$cluster <- as.integer(substr(f,13,13))
off$laser <- TRUE
off
load("/Users/jonny/GitHub/R_crash_course/data/laser.RData", .GlobalEnv)
head(laser_data)
nrows(laser_data)
nrow(laser_data)
laser_data$cell <- paste(laser_data$channel,laser_data$cluster)
laser_data$cell <- as.factor(laser_data$cell)
head(laser_data)
laser_data$cell <- as.factor(laser_data$cell)
levels(laser_data)
load("/Users/jonny/GitHub/R_crash_course/data/gendat.RData", .GlobalEnv)
head(gendat)
?listdir
files = list.files(path="/Users/jonny/Documents/speechData_raw")
files = list.files(path="/Users/jonny/Documents/speechData_raw")
files
files = list.files(path="/Users/jonny/Documents/speechData_raw", full.names=TRUE)
files
basename(files[1])
?basename
z <- basename(files[1])
z
z[1]
z[[1]]
length(z)
length(z[[1]])
nchar(z)
substr(z,1,nchar(z)-4)
spfiles <- c("/Users/Jonny/Documents/speechData/6924.csv",
"/Users/Jonny/Documents/speechData/6925.csv",
"/Users/Jonny/Documents/speechData/6926.csv",
"/Users/Jonny/Documents/speechData/6927.csv",
"/Users/Jonny/Documents/speechData/6928.csv",
"/Users/Jonny/Documents/speechData/6960.csv",
"/Users/Jonny/Documents/speechData/6964.csv",
"/Users/Jonny/Documents/speechData/6965.csv",
"/Users/Jonny/Documents/speechData/6966.csv",
"/Users/Jonny/Documents/speechData/6967.csv",
"/Users/Jonny/Documents/speechData/7007.csv",
"/Users/Jonny/Documents/speechData/7012.csv",
"/Users/Jonny/Documents/speechData/7058.csv",
"/Users/Jonny/Documents/speechData/7105.csv",
"/Users/Jonny/Documents/speechData/7116.csv",
"/Users/Jonny/Documents/speechData/7118.csv",
"/Users/Jonny/Documents/speechData/7120.csv")
fix_dir = "/Users/Jonny/Documents/fixSpeechData/"
keep_cols <- c("trialNumber","consonant","speaker","vowel","token","correct","gentype","step","session","date","response","target")
fix_generalization <- function(spfiles=spfiles,keep_cols=keep_cols){
gendat <- data.frame(setNames(replicate(length(keep_cols),numeric(0),simplify = F),keep_cols))
prog_bar <- txtProgressBar(min=0,max=length(spfiles),width=20,initial=0,style=3)
i=0
# Loop through files
for (f in spfiles){
i=i+1
setTxtProgressBar(prog_bar,i)
sp <- read.csv(f)
sp.gens <- subset(sp,((step>=1) & (!is.na(correct)) & (!is.na(response))),select=keep_cols)
# Get mouse name & add to dataframe
fname <- basename(f)
mname <- substr(fname,1,nchar(fname)-4)
sp.gens$mouse <- mname
# Fix speaker # for mice that use the new stimmap
if ((mname == "7007")|(mname == "7012")|(mname == "7058")|(mname=="7105")|(mname=="7116")|(mname == "7118")|(mname == "7120")){
sp.gens.temp <- sp.gens #Make a copy so we don't run into recursive changes
sp.gens.temp[(sp.gens$speaker == 1) & (sp.gens$step >= 5),]$speaker <- 5
sp.gens.temp[(sp.gens$speaker == 2) & (sp.gens$step >= 5),]$speaker <- 4
sp.gens.temp[(sp.gens$speaker == 3) & (sp.gens$step >= 5),]$speaker <- 1
sp.gens.temp[(sp.gens$speaker == 4) & (sp.gens$step >= 5),]$speaker <- 2
sp.gens.temp[(sp.gens$speaker == 5) & (sp.gens$step >= 5),]$speaker <- 3
sp.gens <- sp.gens.temp
}
#### Clean data from excess tokens - refer to "Phonumber Switches.txt"
### First delete pure excess
## Delete >3 tokens
# Ira
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==1 & (sp.gens$token==4|sp.gens$token==5|sp.gens$token==7|sp.gens$token==8)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==1 & sp.gens$token==4),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==2 & (sp.gens$token==6|sp.gens$token==7|sp.gens$token==8)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==2 & sp.gens$token==5),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==3 & (sp.gens$token==4|sp.gens$token==5|sp.gens$token==6|sp.gens$token==7|sp.gens$token==8|sp.gens$token==9)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==3 & (sp.gens$token==4|sp.gens$token==5)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==4 & (sp.gens$token==5|sp.gens$token==6|sp.gens$token==7|sp.gens$token==8)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==4 & (sp.gens$token==4|sp.gens$token==5|sp.gens$token==6)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==5 & (sp.gens$token==4|sp.gens$token==5|sp.gens$token==7|sp.gens$token==8)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==5 & sp.gens$token==4),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==6 & (sp.gens$token==6|sp.gens$token==7)),]
sp.gens <- sp.gens[!(sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==6 & sp.gens$token==5),]
# Anna
sp.gens <- sp.gens[!(sp.gens$speaker==3 & sp.gens$consonant==1 & sp.gens$vowel==1 & sp.gens$token==4),]
sp.gens <- sp.gens[!(sp.gens$speaker==3 & sp.gens$consonant==1 & sp.gens$vowel==4 & (sp.gens$token==3|sp.gens$token==4)),] # No 3rd /gae/
sp.gens <- sp.gens[!(sp.gens$speaker==3 & sp.gens$consonant==1 & sp.gens$vowel==6 & sp.gens$token==4),]
## Delete discarded/replaced <3 tokens
# Ira
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==1 & sp.gens$token==2),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==2 & (sp.gens$token==1|sp.gens$token==3)),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==2 & sp.gens$token==2),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==3 & sp.gens$token==3),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==2),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==5 & sp.gens$token==3),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==6 & (sp.gens$token==1|sp.gens$token==2)),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==6 & sp.gens$token==1),]
# Anna
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==3 & sp.gens$consonant==1 & sp.gens$vowel==3 & sp.gens$token==1),]
# Dani
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==4 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==1),]
# Theresa
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==1 & sp.gens$token==2),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==2),]
sp.gens <- sp.gens[!(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==6 & sp.gens$token==2),]
## Renumber tokens that turned out to be the same token
try(sp.gens[(sp.gens$speaker==4 & sp.gens$consonant==1 & (sp.gens$vowel==1|sp.gens$vowel==2|sp.gens$vowel==3|sp.gens$vowel==6) & sp.gens$token==4),]$token <- 3,silent = T)
try(sp.gens[(sp.gens$speaker==4 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==5),]$token <- 4,silent = T)
try(sp.gens[(sp.gens$speaker==4 & sp.gens$consonant==2 & (sp.gens$vowel==1|sp.gens$vowel==5) & sp.gens$token==4),]$token <- 3,silent = T)
## Then realign data that had its number changed
# Ira
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==1 & sp.gens$token==6),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==2 & sp.gens$token==4),]$token <- 1,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==2 & sp.gens$token==5),]$token <- 3,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==2 & sp.gens$token==4),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==3 & sp.gens$token==10),]$token <- 3,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==4),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==5 & sp.gens$token==6),]$token <- 3,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==6 & sp.gens$token==5),]$token <- 1,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==1 & sp.gens$vowel==6 & sp.gens$token==4),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==2 & sp.gens$consonant==2 & sp.gens$vowel==6 & sp.gens$token==4),]$token <- 1,silent = T)
# Anna
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==3 & sp.gens$consonant==1 & sp.gens$vowel==3 & sp.gens$token==4),]$token <- 1,silent = T)
# Dani
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==4 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==4),]$token <- 1,silent = T)
# Theresa
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==1 & sp.gens$token==4),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==4 & sp.gens$token==4),]$token <- 2,silent = T)
try(sp.gens[(sp.gens$date<736589 & sp.gens$speaker==5 & sp.gens$consonant==1 & sp.gens$vowel==6 & sp.gens$token==4),]$token <- 2,silent = T)
# Return speaker ID to original mapping
if ((mname == "7007")|(mname == "7012")|(mname == "7058")|(mname=="7105")|(mname=="7116")|(mname == "7118")|(mname == "7120")){
sp.gens.temp <- sp.gens
sp.gens.temp[(sp.gens$speaker == 5) & (sp.gens$step >= 5),]$speaker <- 1
sp.gens.temp[(sp.gens$speaker == 4) & (sp.gens$step >= 5),]$speaker <- 2
sp.gens.temp[(sp.gens$speaker == 1) & (sp.gens$step >= 5),]$speaker <- 3
sp.gens.temp[(sp.gens$speaker == 2) & (sp.gens$step >= 5),]$speaker <- 4
sp.gens.temp[(sp.gens$speaker == 3) & (sp.gens$step >= 5),]$speaker <- 5
sp.gens <- sp.gens.temp
}
#prevent overlapping gentypes from before sampling was not mutually exclusive.
# First knock everything not a 3 to a 2
try(sp.gens[sp.gens$date<736589 & (sp.gens$vowel==3|sp.gens$vowel==2|sp.gens$vowel==1),]$gentype <- 2,silent = T)
# Then specifically define all the 1's.
try(sp.gens[sp.gens$date<736589 & (sp.gens$speaker==1|sp.gens$speaker==2) & (sp.gens$vowel==1|sp.gens$vowel==2) & (sp.gens$token==1|sp.gens$token==2),]$gentype <- 1,silent = T)
try(sp.gens[sp.gens$date<736589 & (sp.gens$speaker==1|sp.gens$speaker==2) & sp.gens$vowel==3 & sp.gens$token==1,]$gentype <- 1,silent = T)
# Renumber target & response to be 0 and 1 rather than 1 and 3
sp.gens[sp.gens$target == 1,]$target <- 0
sp.gens[sp.gens$target == 3,]$target <- 1
sp.gens[sp.gens$response == 1,]$response <- 0
sp.gens[sp.gens$response == 3,]$response <- 1
# Idiosyncratic fixes for each mouse (run on wrong day, data exclusion criteria, etc.)
if (mname == "7007"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(55:60)),] # Early test trials
sp.gens <- sp.gens[!(sp.gens$session %in% c(81,84,87,109,138,168,169,217)),] # Unexplained drops
sp.gens <- sp.gens[!(sp.gens$trialNumber %in% c(35360:35559,39035:39184)),] # Unexplained drop
sp.gens <- sp.gens[!sp.gens$session==115,] # 52 run on file
} else if (mname == "6964"){
sp.gens <- sp.gens[!sp.gens$session==114,] # 5 day break and precipitous drop in performance
sp.gens <- sp.gens[!sp.gens$session==115,] # Same
sp.gens <- sp.gens[!sp.gens$session==103,] # Unexplained drop
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "6926"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(61,62,65,66,67,68,69,70,80)),] # Early test trials (when step 11 was default)
} else if (mname == "6924"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(81,82,106,107,108,119,120,124,125)),] # Early test trials
sp.gens <- sp.gens[!(sp.gens$session %in% c(162,163,165,169,186,189,192)),] # Unexplained drop
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "6925"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(68:73,81,87)),] # Early test trials
sp.gens <- sp.gens[!(sp.gens$trialNumber %in% 83758:83933),] # Unexplained drop
} else if (mname == "6927"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(70:74,85)),] # Early test trials
sp.gens <- sp.gens[!(sp.gens$session==111),] # Unexplained drop
sp.gens <- sp.gens[!(sp.gens$trialNumber %in% 72704:72804),] # Unexplained drop
} else if (mname == "6928"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(65,66,67,68,78,79)),] # Early test trials
} else if (mname == "6960"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(102,103,105,107,108)),] # Early test trials
sp.gens <- sp.gens[!(sp.gens$session %in% c(155,162,163,180,181,199)),] # Unexplained Drops
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "6965"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(73,74)),] # Early test trial
sp.gens <- sp.gens[!(sp.gens$session %in% c(132,133)),] # Unexplained drop
sp.gens <- sp.gens[!(sp.gens$trialNumber %in% 56806:56994),] # Unexplained drop
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "6966"){
sp.gens <- sp.gens[!(sp.gens$trialNumber %in% c(63881:63930,64547:64671,65165:65364,86635:86734)),] # Unexplained drops at beginning of sessions & after breaks
sp.gens <- sp.gens[!(sp.gens$session %in% c(115,143,146)),] # unexplained drop, Drop after week break
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "6967"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(116,122,119,130,155,162)),] # Drop after week break/unexplained drop
#sp.gens <- sp.gens[!(sp.gens$trialNumber %in% c(67037:67111)),] # Drop after break
sp.gens <- sp.gens[sp.gens$date<736733,] # Pre-lesion
} else if (mname == "7012"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(104,105,175,176,177,178,179,217)),] # Unexplained drop
} else if (mname == "7058"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(98,140,187)),] # Unexplained drop
} else if (mname == "7105"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(145,146,151,165)),] # Unexplained drop
} else if (mname == "7116"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(132,137,147,149,157)),] # Unexplained drop
} else if (mname == "7118"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(126,132,136,138,151,159)),] # Unexplained drop
} else if (mname == "7120"){
sp.gens <- sp.gens[!(sp.gens$session %in% c(91,98,110,111,117,135,136,140)),] # Unexplained drop
}
write.csv(sp.gens,file=paste(fix_dir,mname,'.csv',sep=""))
}
}
fix_generalization(spfiles=files, keep_cols=keep_cols)
fix_dir = "/Users/Jonny/Documents/fixSpeechData_temp/"
files
sp <- read.csv(f[1])
sp <- read.csv(files[1])
sp.gens <- subset(sp,((step>=1) & (!is.na(correct)) & (!is.na(response))),select=keep_cols)
head(sp.gens)
fix_generalization(spfiles=files, keep_cols=keep_cols)
integer()
?sink
c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
sink("save-everything-here.txt")
c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
sink()
?sink
?stdout
stdout()
sink("save-everything-here.txt")
c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
c(123)
life_story <- c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
life_story
sink()
file.show("save-everything-here.txt")
# Open the sink
sink("save-everything-here.txt")
life_story <- c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
life_story
# turn off the sink
sink()
# now see what's in our file
file.show("save-everything-here.txt")
file.show("save-everything-here.txt", pager=stdout())
file.show("save-everything-here.txt", pager="cat")
# Open the sink
sink("save-everything-here.txt")
life_story <- c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
life_story
# turn off the sink
sink()
# now see what's in our file
file.show("save-everything-here.txt", pager="cat")
cat(file="save-everything-here.txt")
file.show("save-everything-here.txt", pager=print)
file.show("save-everything-here.txt")
file.show("save-everything-here.txt")
readtext("save-everything-here.txt")
?readtext
??readtext
readLines("save-everything-here.txt")
readLines("save-everything-here.txt",n=3)
sink()
readLines("save-everything-here.txt")
# Open the sink
sink("save-everything-here.txt")
life_story <- c("what we need at the store 2day guys", "it's always just apples and bananas", "we have severe vitamin deficiencies")
life_story
# turn off the sink
sink()
# now see what's in our file
readLines("save-everything-here.txt")
?save.csv
?write.csv
?write.sav
??write.sav
?pdf
grDevices::check.options()
grDevices::check.options
grDevices::dev.list()
grDevices::dev.list
grDevices::Devieces()
grDevices::Devices()
grDevices::Devices
getOption("device")
Devices
.Device
capabilities
capabilities()
?capabilities
pdf("put-plots-here.pdf")
plot(seq(1,5,1))
plot(seq(1,5))
dev.off()
openPDF("put-plots-here.pdf")
system2('open', args="put-plots-here.pdf", wait=FALSE)
currentwd()
getwd()
abs_path <- file.path(getwd(), "put-plots-here.pdf")
system2('open', args=abs_path, wait=FALSE)
abs_path <- file.path(getwd(), "put-plots-here.pdf")
system2('open', args=abs_path, wait=FALSE)
dev.off()
dev.off()
pdf("put-plots-here.pdf")
plot(seq(1,5))
dev.off()
system2('open', args=abs_path, wait=FALSE)
system2('open', args=abs_path, wait=FALSE)
system2('open', args=abs_path, wait=FALSE)
abs_path
getwd()
abs_path <- file.path(getwd(), "put-plots-here.pdf")
system2('open', args=abs_path, wait=FALSE)
?save
cant_forget <- c("you have to stop wiping your nose with just whatever is close at hand",
"see you did it just now that was mine")
?save
save(cant_forget, file="cant_forget.RData")
rm(cant_forget)
?load
load("cant_forget.RData", .GlobalEnv)
cant_forget
?rm
load("cant_forget.RData")
cant_forget
save(cant_forget, file="cant_forget.butiwantto")
?saveRDS
?saveRDS
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4))
stocks
??gather
stocksm <- tidyr::gather(stocks, stock, price, -time)
stocksm
reshape2::dcast(stocksm, formula=time~stock)
?tidyr::complete
?ls
?rm
x <- seq(5, 25, 5)
y <- array(1:24, dim=c(3,8))
z <- list("scores"=c(1,2,3,4,5),
"numbers"=c(6,7,8,9,10))
names(x) <- c("adam", "steve", "harry", "ted", "watsom")
z[["numbers"]]
?sample
?select
??select
??one_of
library(dplyr)
?require
diamonds
df <- ggplot2::diamonds
names(df)
select(df, starts_with("c"))
head(select(df, starts_with("c")))
head(select(df, one_of(c("color", "hue", "luminance"))))
names(df)
head(select(df, one_of(c("color", "hue", "luminance", "clarity"))))
x
x[3]
x[c(FALSE, FALSE, TRUE, FALSE, FALSE)]
?Comparison
?base::Logic
x
x > 5
x > 10
x >= 10
x && x
x & x
y
(x > 10) & (x < 20)
(x > 10) && (x < 20)
x > 10
cbind((x>10), (x<20))
cbind((x>10), (x<20),((x>10) & (x<20)))
(max(x) > 20)
(max(x) > 20) && (min(x) <0)
(max(x) > 20) && (min(x) < 0)
(max(x) > 20) && (min(x) < 5)
(max(x) > 20) && (min(x) <= 5)
?with
?within
with(df, cut>price)
head(df)
df[df$cut=="Good" | df$cut=="Very Good",]
df[df$cut=="Good" || df$cut=="Very Good",]
df[df$cut=="Good" | df$cut=="Very Good",]
df$cut=="Good"
df$cut=="Good"[1:10]
df$cut=="Good"[1:10]
(df$cut=="Good")[1:10]
df[df$cut=="Good" & df$carat>5,]
df[df$cut=="Good" & df$carat>2,]
df[df$cut=="Good" & df$carat>1,]
df[df$cut=="Good" & df$carat>0,]
df[df$cut=="Good" & df$carat>1,]
df[df$cut=="Good" & df$carat>1,"color"]
df[df$cut=="Good" & df$carat>1, 2]
df[df$cut=="Good" & df$carat>1, "color"]
df[df$cut=="Good" & df$carat>1, 2]$color
df[df$cut=="Good" & df$carat>1,]$color
head(df[df$cut=="Good" & df$carat>1,]$color)
head(df[df$cut=="Good" & df$carat>1, "color"])
head(df[df$cut=="Good" & df$carat>1, 2])
head(df[df$cut=="Good" & df$carat>1,]$color)
head(df[df$cut %in% c("Good", "Very Good")])
head(df[df$cut %in% c("Good", "Very Good"),])
?which
with(df, cut %in% c("Good", "Very Good"))
with(df, df[cut %in% c("Good", "Very Good")])
with(df, df[cut %in% c("Good", "Very Good"),])
x > 20
x > 10
which(x > 10)
x
x[]
x[] <- 2
x
x[] <-  c(30, 35)
x[c(4,5)] <- c(30,35)
x
x <- seq(5, 25, 5)
x
names(x) <- c("adam", "steve", "harry", "ted", "watson")
x[c(4,5)] <- c(30,35)
x
x[] <-  c(30, 35)
x
x[c(1,2,3)] <-  c(30, 35)
x
x[1] <-  c(30, 35)
x
y[1] <-  c(30, 35)
y
z
z[1]
friends <- data.frame(names=c("toothbrush", "vacuum", "blinds"),
hobbies=c("brushing", "spinning", "darkening"))
friends
friends$hobbies <- c("crying")
friends$hobbies <- c("crying", "meatballs", "hootenannying", "shouting")
friends <- data.frame(names=c("toothbrush", "vacuum", "blinds"),
hobbies=c("brushing", "spinning", "darkening"))
friends$hobbies <- c("crying", "meatballs")
friends[c("vacuum", "blinds"),]$hobbies <- c("crying", "meatballs")
friends$favorites <- c("crying", "meatballs")
friends <- data.frame(names=c("toothbrush", "vacuum", "blinds"),
hobbies=c("brushing", "spinning", "darkening"))
friends$favorites <- c("crying", "meatballs")
friends[c("vacuum", "blinds"),]$favorites <- c("crying", "meatballs")
friends
friends[friends$names %in% c("vacuum", "blinds"),]$favorites <- c("crying", "meatballs")
friends
friends$favorites <- c("crying", "meatballs")
friends[friends$names %in% c("vacuum", "blinds"),]$favorites
friends[c(1,2),]$favorites <- c("crying", "meatballs")
friends[c(1,2),]$favorites
friends$favorites <- c(4,5)
friends <- data.frame(names=c("toothbrush", "vacuum", "blinds"),
hobbies=c("brushing", "spinning", "darkening"),
favorites=c(1,2,3))
friends$favorites <- c(4,5)
friends[c(1,2),]$favorites <- c(4,5)
friends
install.packages("bookdown")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
??cwd
??pwd
??wd
getwd()
bookdown::render_book("/Users/jonny/GitHub/R_Guide/index.Rmd")
bookdown::render_book("/Users/jonny/GitHub/R_Guide/index.Rmd")
setwd
setwd("/Users/jonny/GitHub/R_Guide")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::gitbook("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
